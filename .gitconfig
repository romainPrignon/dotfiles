[user]
    name = romainprignon
    email = pro.rprignon@gmail.com

[alias]
    tags = tag -l
    branches = branch -a
    remotes = remote -v

    st = status
    cp = cherry-pick

    #clone
    cl = clone
    clr = clone --recursive

    # checkout
    co = checkout
    cob = checkout -B

    #commit
    ci = commit
    cim = commit -m
    cia = commit -a
    ciam = commit -a -m

    #rebase
    rb = rebase
    rbi = rebase -i
    rba = rebase --abort
    rbc = rebase --continue
    rbs = rebase --skip

    # fetch
    f = fetch
    fo = fetch origin
    fu = fetch upstream

    # Pull
    pl   	= pull
    plo 	= pull origin
    plom 	= pull origin master
    plog 	= pull origin gh-pages
    plod 	= pull origin develop

    plr     = pull --rebase
    plro    = pull --rebase origin
    plrom 	= pull --rebase origin master
    plrog 	= pull --rebase origin gh-pages
    plrod 	= pull --rebase origin develop

    plu  	= pull upstream
    plum	= pull upstream master

    plru        = pull --rebase upstream
    plrum	= pull --rebase upstream master

    # Push
    ps   = push
    pso  = push origin

    psom = push origin master
    psod = push origin develop
    psog = push origin gh-pages

    psu  = push upstream
    psum = push upstream master

    # log section
    lg = log --oneline --graph --abbrev-commit --decorate
    lga = log --graph --oneline --abbrev-commit --decorate --all

    # change last commit message
    amend = commit --amend -C HEAD

    # undo last commit
    uncommit = reset --soft HEAD^

	# unstage change
	unstage = reset HEAD

    # standup
    standup = log --since '1 day ago' --oneline --author pro.rprignon@gmail.com

    # find orphans
    orphans = fsck --full

[core]
    excludesfile = ~/.gitignore
    autocrlf = input

[push]
    default = simple

[diff]
    mnemonicPrefix = true
    tool = vscode

[difftool]
    prompt = false

[difftool "vscode"]
    cmd = code --wait --diff $LOCAL $REMOTE

[difftool "pstorm"]
    cmd = pstorm diff $(cd $(dirname "$LOCAL") && pwd)/$(basename "$LOCAL") $(cd $(dirname "$REMOTE") && pwd)/$(basename "$REMOTE")
    trustExitCode = true

[merge]
	tool = vscode

[mergetool "vscode"]
    cmd = code --wait $MERGED

[mergetool "pstorm"]
    cmd = pstorm merge $(cd $(dirname "$LOCAL") && pwd)/$(basename "$LOCAL") $(cd $(dirname "$REMOTE") && pwd)/$(basename "$REMOTE") $(cd $(dirname "$BASE") && pwd)/$(basename "$BASE") $(cd $(dirname "$MERGED") && pwd)/$(basename "$MERGED")
    trustExitCode = true
